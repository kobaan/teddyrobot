<!-- Launch in the camera namespace containing "image_raw" and "camera_info" -->
<launch>

  <arg name="manager" default="camera_manager" /> <!-- Must be globally qualified -->
  <arg name="respawn" default="true" />

  <!-- Nodelet Manager for camera -->
  <node pkg="nodelet" type="nodelet" name="camera_manager" args="manager"
	respawn="$(arg respawn)" />

  <arg name="left" default="camera/left" />
  <arg name="right" default="camera/right" />
  <!-- TODO Arguments for sync policy, etc? -->

  <arg     if="$(arg respawn)" name="bond" value="" />
  <arg unless="$(arg respawn)" name="bond" value="--no-bond" />

  <!-- Basic processing for left camera -->
  <include file="$(find image_proc)/launch/image_proc.launch"
	   ns="$(arg left)">
    <arg name="manager" value="$(arg manager)" />
    <arg name="respawn" value="$(arg respawn)" />
  </include>

  <!-- Basic processing for right camera -->
  <include file="$(find image_proc)/launch/image_proc.launch"
	   ns="$(arg right)">
    <arg name="manager" value="$(arg manager)" />
    <arg name="respawn" value="$(arg respawn)" />
  </include>

  <!-- Disparity image -->
  <node pkg="nodelet" type="nodelet" name="disparity"
        args="load stereo_image_proc/disparity $(arg manager) $(arg bond)"
	respawn="$(arg respawn)" />

  <!-- Point cloud, PCL-friendly -->
  <node pkg="nodelet" type="nodelet" name="point_cloud2"
        args="load stereo_image_proc/point_cloud2 $(arg manager) $(arg bond)"
	respawn="$(arg respawn)" />

  <!-- Point cloud, deprecated format -->
  <!--
  <node pkg="nodelet" type="nodelet" name="point_cloud"
        args="load stereo_image_proc/point_cloud $(arg manager) $(arg bond)"
	respawn="$(arg respawn)" />
  // -->
  <node name="depth" pkg="pcl_ros" type="convert_pointcloud_to_image" args="input:=/points2 output:=/camera/depth/image_raw" />

</launch>
